plugins{
    id "java"
    id 'io.spring.dependency-management'
    id "org.springframework.boot"
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.liquibase:liquibase-core'
    implementation 'ch.qos.logback:logback-core'
    implementation 'ch.qos.logback:logback-classic'
    implementation 'org.liquibase.ext:liquibase-hibernate5:4.3.3'


    annotationProcessor 'org.hibernate:hibernate-jpamodelgen'

    implementation 'org.springframework.boot:spring-boot-starter-websocket'

//    runtimeOnly('mysql:mysql-connector-java')
    runtimeOnly('org.postgresql:postgresql')

    liquibaseRuntime 'org.liquibase:liquibase-core'
    liquibaseRuntime 'ch.qos.logback:logback-core'
    liquibaseRuntime 'ch.qos.logback:logback-classic'
    liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:4.3.3'
    liquibaseRuntime 'org.postgresql:postgresql'
    liquibaseRuntime 'org.springframework.boot:spring-boot-starter-data-jpa'
    liquibaseRuntime sourceSets.main.output

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation("com.h2database:h2")
}

def changeLog = "$projectDir/src/main/resources/db/changelog-master.xml"

diff.dependsOn compileJava
diffChangeLog.dependsOn compileJava
generateChangelog.dependsOn compileJava

liquibase {
    activities {
        main {
            changeLogFile changeLog
            driver 'org.postgresql.Driver'
            username 'local'
            password 'bitnami'
            url 'jdbc:postgresql://local.dev.database:5439/springbootangular'
            classpath '/'
            referenceUrl 'hibernate:spring:com.backend.entity' +
                    '?dialect=org.hibernate.dialect.PostgreSQLDialect'
        }
    }
    runList = 'main'
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file("src/generated/java")
}

sourceSets {
    generated {
        java {
            srcDirs = ['src/generated/java']
        }
    }
}


test {
    useJUnitPlatform()
}